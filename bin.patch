diff -U 3 -H -d -r -N -- neo4j-community-2.1.5-orig/bin/neo4j neo4j-community-2.1.5-mod/bin/neo4j
--- neo4j-community-2.1.5-orig/bin/neo4j	2014-09-30 03:35:40.000000000 -0300
+++ neo4j-community-2.1.5-mod/bin/neo4j	2014-11-05 07:57:26.549286965 -0200
@@ -33,23 +33,12 @@
 LAUNCHD_NAME="org.neo4j.server"
 
 function findBaseDirAndCdThere {
-# This seems to not be safe to run at any time. If that
-# is the case, it should be fixed to be so, if possible.
-  SCRIPT=$0
-
-  cd "`dirname "$SCRIPT"`"
-  SCRIPT=`basename "$SCRIPT"`
-
-  while [ -L "$SCRIPT" ]
-  do
-    SCRIPT=$( readlink "$SCRIPT" )
-    cd "$(dirname "$SCRIPT")"
-    SCRIPT=`basename "$SCRIPT"`
-  done
-  NEO4J_HOME=`cd $( dirname "$SCRIPT" )/.. && dirs -l +0`
-  NEO4J_INSTANCE=$NEO4J_HOME
-  NEO4J_CONFIG=$NEO4J_INSTANCE/conf
-  NEO4J_LOG=$NEO4J_INSTANCE/data/log
+  NEO4J_HOME=/usr/share/java/neo4j
+  NEO4J_INSTANCE=/var/lib/neo4j
+  NEO4J_CONFIG=/etc/neo4j
+  NEO4J_LOG=/var/log/neo4j
+  NEO4J_SHARE=/usr/share/neo4j
+  NEO4J_RUNDIR=/run/neo4j
 
   cd "$NEO4J_HOME"
 }
@@ -67,14 +56,14 @@
 }
 
 findBaseDirAndCdThere
-source bin/utils
+source ${NEO4J_SHARE}/bin/utils
 parseConfig
 
 JAVA_OPTS="-server -XX:+DisableExplicitGC ${wrapper_java_additional}"
 [ -z "${wrapper_java_initmemory}" ] || JAVA_OPTS="$JAVA_OPTS -Xms${wrapper_java_initmemory}m"
 [ -z "${wrapper_java_maxmemory}" ] || JAVA_OPTS="$JAVA_OPTS -Xmx${wrapper_java_maxmemory}m"
 
-#NEO4J_SERVER_PORT=`( egrep "^org.neo4j.server.webserver.port" $NEO4J_INSTANCE/conf/neo4j-server.properties || echo 7474 ) | sed -e 's/.*=//'`
+#NEO4J_SERVER_PORT=`( egrep "^org.neo4j.server.webserver.port" $NEO4J_CONFIG/neo4j-server.properties || echo 7474 ) | sed -e 's/.*=//'`
 NEO4J_SERVER_PORT=${org_neo4j_server_webserver_port:=7474}
 
 LAUNCHD_NAME="${LAUNCHD_NAME}.${NEO4J_SERVER_PORT}"
@@ -90,16 +79,16 @@
 # Username to propose for neo4j user, can be overridden by -u USERNAME option
 DEFAULT_USER='neo4j'
 
-SCRIPT_NAME="${NEO4J_HOME}/bin/neo4j"
+SCRIPT_NAME="${NEO4J_SHARE}/bin/neo4j"
 SERVICE_NAME=${wrapper_ntservice_name:=neo4j-service}
 LAUNCHD_DIR=~/Library/LaunchAgents/
 
 TIMEOUT=120
 
-PID_FILE=${NEO4J_INSTANCE}/data/neo4j-service.pid
+PID_FILE=${NEO4J_RUNDIR}/neo4j-service.pid
 buildclasspath() {
   # confirm library jars
-  LIBDIR="$NEO4J_HOME"/lib
+  LIBDIR="$NEO4J_HOME"
   if [ ! -e "$LIBDIR" ] ; then
     echo "Error: missing Neo4j Library, expected at $LIBDIR"
     exit 1
@@ -134,7 +123,7 @@
   CLASSPATH=${ALL_JARS}
 
   # add useful conf stuff to classpath - always a good idea
-  CLASSPATH="$CLASSPATH":"$NEO4J_HOME"/conf/
+  CLASSPATH="$CLASSPATH":"$NEO4J_CONFIG"
 }
 
 detectrunning() {
@@ -144,7 +133,7 @@
   else
       ## This could be achieved with filtering using -sTCP:LISTEN but this option is not available
       ## on lsof v4.78 which is the one bundled with some distros. So we have to do this grep below
-      newpid=$(lsof -i :$NEO4J_SERVER_PORT -F T -Ts | grep -i "TST=LISTEN" -B1 | head -n1)
+      newpid=$(lsof -i :$NEO4J_SERVER_PORT -F p | grep "p")
       newpid=${newpid:1}
   fi
 }
@@ -289,15 +278,15 @@
 # pass in "true" for created to mark that the user was created (instead than pre-existing)
 modify_user_config() {
   created=${2:-"false"}
-  if `grep -q "wrapper\.user=" "$NEO4J_INSTANCE/conf/neo4j-wrapper.conf"` ; then
-    sed -i -e "s/^.*wrapper\.user=.*$/wrapper\.user=$1/" "$NEO4J_INSTANCE/conf/neo4j-wrapper.conf"
+  if `grep -q "wrapper\.user=" "$NEO4J_CONFIG/neo4j-wrapper.conf"` ; then
+    sed -i -e "s/^.*wrapper\.user=.*$/wrapper\.user=$1/" "$NEO4J_CONFIG/neo4j-wrapper.conf"
   else
-    echo "wrapper.user=$1" >> "$NEO4J_INSTANCE/conf/neo4j-wrapper.conf"
+    echo "wrapper.user=$1" >> "$NEO4J_CONFIG/neo4j-wrapper.conf"
   fi
 
-  if `grep -q "wrapper\.user\.created=" "$NEO4J_INSTANCE/conf/neo4j-wrapper.conf"` ; then
-    sed -i -e "s/^.*wrapper\.user\.created=.*$/wrapper\.user\.created=${created}/" "$NEO4J_INSTANCE/conf/neo4j-wrapper.conf"
+  if `grep -q "wrapper\.user\.created=" "$NEO4J_CONFIG/neo4j-wrapper.conf"` ; then
+    sed -i -e "s/^.*wrapper\.user\.created=.*$/wrapper\.user\.created=${created}/" "$NEO4J_CONFIG/neo4j-wrapper.conf"
   else
-    echo "wrapper.user.created=${created}" >> "$NEO4J_INSTANCE/conf/neo4j-wrapper.conf"
+    echo "wrapper.user.created=${created}" >> "$NEO4J_CONFIG/neo4j-wrapper.conf"
   fi
 }
diff -U 3 -H -d -r -N -- neo4j-community-2.1.5-orig/bin/neo4j-shell neo4j-community-2.1.5-mod/bin/neo4j-shell
--- neo4j-community-2.1.5-orig/bin/neo4j-shell	2014-09-30 03:35:40.000000000 -0300
+++ neo4j-community-2.1.5-mod/bin/neo4j-shell	2014-11-05 07:39:00.153752030 -0200
@@ -86,7 +86,7 @@
 
 if [ -z "$REPO" ]
 then
-  REPO="$BASEDIR"/lib
+  REPO=/usr/share/java/neo4j
 fi
 
 LIBRARY_JARS=""
diff -U 3 -H -d -r -N -- neo4j-community-2.1.5-orig/bin/utils neo4j-community-2.1.5-mod/bin/utils
--- neo4j-community-2.1.5-orig/bin/utils	2014-09-30 03:35:40.000000000 -0300
+++ neo4j-community-2.1.5-mod/bin/utils	2014-11-05 07:39:00.153752030 -0200
@@ -324,11 +324,11 @@
 # in place.
 checkandrepairenv() {
     # Create data/log if missing, change owner if created.
-    if [ ! -d "$NEO4J_HOME"/data/log ]; then
-      echo "${NEO4J_HOME}/data/log was missing, recreating..."
-      mkdir "$NEO4J_HOME"/data/log
+    if [ ! -d "$NEO4J_LOG" ]; then
+      echo "${NEO4J_LOG} was missing, recreating..."
+      mkdir "$NEO4J_LOG"
       if [ $UID == 0 ] ; then
-        chown $NEO4J_USER "$NEO4J_HOME"/data/log
+        chown $NEO4J_USER "$NEO4J_LOG"
       fi
     fi
 }
